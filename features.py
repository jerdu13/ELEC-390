# Jumping data extraction
features = pd.DataFrame(columns=['mean', 'max', 'std', 'sum', 'median', 'kurtosis', 'skew', 'variance', 'correlation' 'min'])
features['mean'] = data.iloc[:, 1].rolling(window=window_size).mean().dropna()
features['max'] = data.iloc[:, 1].rolling(window=window_size).max()
features['std'] = data.iloc[:, 1].rolling(window=window_size).std()
features['sum'] = data.iloc[:, 1].rolling(window=window_size).sum()
features['median'] = data.iloc[:, 1].rolling(window=window_size).median()
features['kurtosis'] = data.iloc[:, 1].rolling(window=window_size).kurt()
features['skew'] = data.iloc[:, 1].rolling(window=window_size).skew()
features['variance'] = data.iloc[:, 1].rolling(window=window_size).var()
features['correlation'] = data.iloc[:, 1].rolling(window=window_size).corr()
features['min'] = data.iloc[:, 1].rolling(window=window_size).min()

print("Filtered Jumping Data - Mean Absolute Acceleration\n")
print(features['mean'])
# print(features['max'])
# print(features['std'])
# print(features['sum'])
# print(features['median'])
# print(features['kurtosis'])
# print(features['skew'])
# print(features['variance'])
# print(features['min'])

#walking
features2 = pd.DataFrame(columns=['mean', 'max', 'std', 'sum', 'median', 'kurtosis', 'skew', 'variance', 'correlation' 'min'])
# features2['mean'] = data2.iloc[:, 1].rolling(window=window_size).mean()
# features2['max'] = data2.iloc[:, 1].rolling(window=window_size).max()
# features2['std'] = data2.iloc[:, 1].rolling(window=window_size).std()
# features2['sum'] = data2.iloc[:, 1].rolling(window=window_size).sum()
# features2['median'] = data2.iloc[:, 1].rolling(window=window_size).median()
# features2['kurtosis'] = data2.iloc[:, 1].rolling(window=window_size).kurt()
# features2['skew'] = data2.iloc[:, 1].rolling(window=window_size).skew()
# features2['variance'] = data2.iloc[:, 1].rolling(window=window_size).var()
# features2['correlation'] = data2.iloc[:, 1].rolling(window=window_size).corr()
# features2['min'] = data2.iloc[:, 1].rolling(window=window_size).min()

# print(features2['mean'])
# print(features2['max'])
# print(features2['std'])
# print(features2['sum'])
# print(features2['median'])
# print(features2['kurtosis'])
# print(features2['skew'])
# print(features2['variance'])
# print(features2['min'])
# # print the hdf5 organization nicely
# f = nx.nxload('elec390.h5')
# print(f.tree)